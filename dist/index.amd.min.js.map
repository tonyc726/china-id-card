{"version":3,"file":"index.amd.min.js","sources":["../src/index.js"],"sourcesContent":["/**\n * 中华人民共和国国家标准 - 公民身份号码\n * @see https://zh.wikisource.org/wiki/GB_11643-1999_%E5%85%AC%E6%B0%91%E8%BA%AB%E4%BB%BD%E5%8F%B7%E7%A0%81\n */\n\n// 检验码结果对照表\nconst CHECK_CODE_MAP = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n// 身份号码中各个位置上的加权因子W(i)数值\nconst WEIGHTING_MAP = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1];\n\n/**\n * 检验身份证基本格式，15位数字、18位数字、17位数字末尾是字母X\n *\n * @param {String | Number} IDCard - 待检验的身份证号\n * @return {Boolean} - 返回检验结果\n */\nconst checkBaseFormat = (IDCard = '') =>\n  /(^\\d{15}$)|(^\\d{17}(\\d|X)$)/i.test(IDCard);\n\n/**\n * 补全15位身份号码的年份，用于计算验证码\n *\n * @param {String | Number} IDCard - 待补全年份格式的15位身份证号码\n * @param {String | Number} [preYear = 19] - 年份前2位，默认为19\n */\nconst makeYearToYYYY = (IDCard = '', preYear = 19) =>\n  /^\\d{15}$/.test(IDCard)\n    ? `${IDCard.substr(0, 6)}${preYear}${IDCard.substr(6, IDCard.length - 6)}`\n    : null;\n\n/**\n * 检验身份证前2位省级地址码是否正确\n * @see http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201703/t20170310_1471429.html\n *\n * @param {String | Number} IDCard - 待检验的身份证号\n * @return {Boolean} - 返回检验结果\n */\nconst checkProvince = (IDCard = '') =>\n  IDCard &&\n  /^(11|12|13|14|15|21|22|23|31|32|33|34|35|36|37|41|42|43|44|45|46|50|51|52|53|54|61|62|63|64|65|71|81|82)/.test(\n    IDCard\n  );\n\n/**\n * 检验身份证的生日信息是否正确，依据为年龄\n *\n * @param {String | Number} IDCard - 待检验的身份证号\n * @return {Boolean} - 返回检验结果\n */\nconst checkBirthday = (IDCard = '') => {\n  const birthdayMatch = IDCard.match(\n    /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/\n  );\n  if (birthdayMatch === null) {\n    return false;\n  }\n  // 年龄\n  const diffYear =\n    new Date().getFullYear() -\n    new Date(\n      `${birthdayMatch[2]}-${birthdayMatch[3]}-${birthdayMatch[4]}`\n    ).getFullYear();\n  // 年龄在0-130之间，目前中国没有超过130岁的\n  return diffYear >= 0 && diffYear <= 130;\n};\n\n/**\n * 获取身份证的末位检验码\n *\n * @param {String | Number} IDCard - 待检验的身份证号\n * @return {Number} - 如果身份证符合条件，则返回检验码\n */\nexport const getCheckCode = (IDCard = '') => {\n  const IDCardMasterCodeMatch = /^\\d{15}$/.test(IDCard)\n    ? makeYearToYYYY(IDCard).match(/(^\\d{17})/)\n    : IDCard.match(/(^\\d{17})/);\n  if (IDCardMasterCodeMatch === null) {\n    return null;\n  }\n  const IDCardMasterCode = IDCardMasterCodeMatch[1];\n  const IDCardMasterCodeWithWeightingReduce = IDCardMasterCode.split('').reduce(\n    (sum, a, i) => sum + a * WEIGHTING_MAP[i],\n    0\n  );\n  return CHECK_CODE_MAP[IDCardMasterCodeWithWeightingReduce % 11];\n};\n\n/**\n * 转换15位身份号码为18位身份证号码\n *\n * @param {String | Number} IDCard - 待转换的15位身份证号码\n * @param {String | Number} preYear - 年份前2位\n * @return {String} - 18位身份证号码\n */\nexport const tranformEighteen = (IDCard = '', preYear) => {\n  const IDCardMasterCode = makeYearToYYYY(IDCard, preYear);\n\n  return IDCardMasterCode === null\n    ? null\n    : `${IDCardMasterCode}${getCheckCode(IDCardMasterCode)}`;\n};\n\n/**\n * 身份证号码实例\n */\nclass IDCard {\n  constructor(id) {\n    if (!checkBaseFormat(id)) {\n      console.error('id card format is error!');\n      return false;\n    }\n\n    this.id = id.length === 15 ? tranformEighteen(id) : id;\n    this.isVerified =\n      checkProvince(id) &&\n      checkBirthday(this.id) &&\n      getCheckCode(this.id) === this.id.substr(17, 1);\n  }\n\n  getMasterCode() {\n    return this.isVerified ? this.id.substr(0, 17).toString() : null;\n  }\n\n  getCheckCode() {\n    return this.isVerified ? this.id.substr(17, 1).toString() : null;\n  }\n}\n\nexport default IDCardNumber => new IDCard(IDCardNumber);\n"],"names":["tranformEighteen","IDCardMasterCode","makeYearToYYYY","getCheckCode","CHECK_CODE_MAP","WEIGHTING_MAP","IDCard","preYear","test","substr","length","IDCardMasterCodeMatch","match","IDCardMasterCodeWithWeightingReduce","split","reduce","sum","a","i","this","isVerified","id","toString","checkBaseFormat","console","error","checkProvince","birthdayMatch","diffYear","Date","getFullYear","checkBirthday","IDCardNumber"],"mappings":";kNA+FgC,SAAnBA,QACLC,EAAmBC,yDADe,kDAGZ,OAArBD,EACH,eACGA,UAAmBE,EAAaF,IA9FzC,UAAMG,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAGpEC,EAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAiBtEH,EAAiB,eAACI,yDAAS,GAAIC,yDAAU,SAC7C,WAAWC,KAAKF,aACTA,EAAOG,OAAO,EAAG,WAAKF,UAAUD,EAAOG,OAAO,EAAGH,EAAOI,OAAS,IACpE,MA4COP,EAAe,eAACG,yDAAS,GAC9BK,GAAwB,WAAWH,KAAKF,GAC1CJ,EAAeI,GACfA,GADuBM,MAAM,gBAEH,OAA1BD,SACK,KAGHE,EADmBF,EAAsB,GACcG,MAAM,IAAIC,OACrE,SAACC,EAAKC,EAAGC,UAAMF,EAAMC,EAAIZ,EAAca,IACvC,UAEKd,EAAeS,EAAsC,KAqBxDP,sCAcJ,kBACSa,KAAKC,WAAaD,KAAKE,GAAGZ,OAAO,EAAG,IAAIa,WAAa,iCAG9D,kBACSH,KAAKC,WAAaD,KAAKE,GAAGZ,OAAO,GAAI,GAAGa,WAAa,sGAlBlDD,wFA1FU,iBACtB,+BAA+Bb,4DADC,IA2FzBe,CAAgBF,UACnBG,QAAQC,MAAM,6BACP,OAGJJ,GAAmB,KAAdA,EAAGX,OAAgBV,EAAiBqB,GAAMA,OAC/CD,WA5Ea,eAACd,yDAAS,UAC9BA,GACA,2GAA2GE,KACzGF,GA0EEoB,CAAcL,IAjEE,eACdM,0DADwB,IACDf,MAC3B,qDAEoB,OAAlBe,SACK,EAGHC,GACJ,IAAIC,MAAOC,cACX,IAAID,eACCF,EAAc,eAAMA,EAAc,eAAMA,EAAc,KACzDG,qBAEe,GAAZF,GAAiBA,GAAY,IAoDhCG,CAAcZ,KAAKE,KACnBlB,EAAagB,KAAKE,MAAQF,KAAKE,GAAGZ,OAAO,GAAI,sBAYpCuB,UAAgB,IAAI1B,EAAO0B"}